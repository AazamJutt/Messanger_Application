

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.border.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aazam Sultan
 */
public class Client extends javax.swing.JFrame {

    /** Creates new form Client */
    Socket soc;
    DataInputStream in;
    DataOutputStream out;
    int xMouse;
    int yMouse;
    String recipient;
    
    public Client(String addr,int port){
        try{
            initComponents();
            recipient = "Server";
            recipientName.setText(recipient);
            soc = new Socket(addr, port);
            System.out.println("connected to server");
            out = new DataOutputStream(soc.getOutputStream());
            in = new DataInputStream(soc.getInputStream());            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void connect()
    {
        open();
        requestConnection();
        setVisible(true);
        recieveMessages();
    }
    
    public void open()
    {
        try {
            in = new DataInputStream(soc.getInputStream());
            out = new DataOutputStream(soc.getOutputStream());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    public void close()
    {
        try { 
            in.close();
            out.close();
            soc.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        recipientName = new javax.swing.JLabel();
        closeChatBtn = new javax.swing.JButton();
        endChatBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        messageBox = new javax.swing.JTextField();
        sendBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagePane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(101, 119, 134));
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 106, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        recipientName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        recipientName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/person.png"))); // NOI18N
        recipientName.setText("jLabel1");

        closeChatBtn.setBackground(new java.awt.Color(0, 106, 255));
        closeChatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        closeChatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeChatBtnActionPerformed(evt);
            }
        });

        endChatBtn.setBackground(new java.awt.Color(162, 201, 255));
        endChatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/end_chat.png"))); // NOI18N
        endChatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endChatBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(recipientName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(endChatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeChatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeChatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(endChatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(recipientName)))
                .addGap(11, 11, 11))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        messageBox.setBackground(new java.awt.Color(153, 153, 153));
        messageBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        sendBtn.setBackground(new java.awt.Color(0, 106, 255));
        sendBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/send.png"))); // NOI18N
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(messageBox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        messagePane.setEditable(false);
        messagePane.setBackground(new java.awt.Color(51, 51, 51));
        messagePane.setFont(new java.awt.Font("Gadugi", 0, 24)); // NOI18N
        messagePane.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(messagePane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        String line = messageBox.getText();
        if(!line.equals(""))
        {
            messagePane.setText(messagePane.getText()+"You: "+line+'\n');
            messageBox.setText("");
            try {
                //sends message
                out.writeUTF(line);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_sendBtnActionPerformed
    public void requestConnection()
    {
        String con = "";
         try {
             System.out.println("requesting connection...");
            while(!con.equalsIgnoreCase(Commands.GRANTED))
            {
                con = in.readUTF();
            }
             System.out.println("connected...");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void messageRecieved(String line)
    {
        messagePane.setText(messagePane.getText()+line+'\n');
    }
    
    private void closeChatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeChatBtnActionPerformed
        
        this.setVisible(false);
        this.exitServer();  
        close();
        System.exit(0);
    }//GEN-LAST:event_closeChatBtnActionPerformed
    
    private void exitServer()
    {
        try {
             System.out.println("exiting...");
             //Notifies Server that client is exiting
             out.writeUTF(Commands.EXIT);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        setLocation(x-xMouse , y-yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        xMouse  = evt.getX();
        yMouse  = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void endChatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endChatBtnActionPerformed
        try {
             System.out.println("disconnecting...");
             
             //Notifies Server that client is ending chat
             out.writeUTF(Commands.END_CHAT);
        } catch (Exception ex) {
            //ex.printStackTrace();
        }
    }//GEN-LAST:event_endChatBtnActionPerformed
    
    public void recieveMessages()
    {        
       String line = "";
        try {
            while(!line.equalsIgnoreCase(Commands.DISCONNECT))
            {
                System.out.println(line);
                line = in.readUTF();

                //When Client is connected to another client
                if(line.equalsIgnoreCase(Commands.CONNECTED))
                {
                    //next line will be sender's info
                    System.out.print("Starting chat with ");
                    setSenderInfo();
                }
                else
                {
                    if(line.length()!=0)
                        messageRecieved(line);
                }

            }
        } catch (Exception ex) {
        }
        this.close();
   }
    
    
    private void setSenderInfo() {
        String sender ="";
        try {
            sender = in.readUTF();
            System.out.println("\""+sender+"\"");
        } catch (Exception ex) {
        }
        recipient = sender;
        recipientName.setText(recipient);
        messagePane.setText("");
    }
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        
        Client client = new Client("127.0.0.1",4444);
        client.connect();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeChatBtn;
    private javax.swing.JButton endChatBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageBox;
    private javax.swing.JTextPane messagePane;
    private javax.swing.JLabel recipientName;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables

}
